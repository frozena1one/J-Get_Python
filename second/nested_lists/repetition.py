# Разбор ДЗ:

# Task 1:
    # Создайте список, состоящий из 5 вложенных списков, все элементы которых будут целые числа.
    # Вычислите для каждого вложенного списка среднее арифметические его элементов.

    # [[1, 2, 3], [2, 3, 4], [3, 4, 5], [4, 5, 6], [5, 6, 7]] -> 2.0
    #                                                            3.0
    #                                                            4.0
    #                                                            5.0
    #                                                            6.0

# Решение:
numbers = [[1, 2, 3], [2, 3, 4], [3, 4, 5], [4, 5, 6], [5, 6, 7]]
for list in numbers:
    sum = 0
    for number in list:
        sum += number
    # print(sum / len(list))


# Task 2:
    # Напишите программу, которая будет печатать ёлки высоты n. Число n вводит пользователь.
    # Напомню, как считывать входные данные:
    # n = int(input())

    # 5 ->    *
    #        ***
    #       *****
    #      *******
    #     *********

# Решение:
# n = int(input())
# stars = 1
# for i in range(n):
    # print(" " * (n - (i + 1)), '*' * stars, sep='')
    # stars += 2

# Строковый тип данных, текст можно умножать на целое число:
# 'str' * 3 -> 'strstrstr'


# Задачи на повторение:

# Задача:
# Дополните приведенный код, используя списочный метод append(), чтобы список list1 имел вид:
# list1 = [10, 20, [300, 400, [5000, 6000, 7000], 500], 30, 40]

# Решение:
# list1
# 0: 10
# 1: 20
# 2: [300, 400, [5000, 6000, 7000], 500]
# 3: 30
# 4: 40

# list1[2]
# 0: 30
# 1: 400
# 2: [5000, 6000, 7000]
# 3: 500
list1 = [10, 20, [300, 400, [5000, 6000], 500], 30, 40]
list1[2][2].append(7000)
# print(list1)


# print(list1)

# Задача:
# Дополните приведенный код, используя списочный метод extend(), чтобы список list1 имел вид:
# list1 = ['a', 'b', ['c', ['d', 'e', ['f', 'g', 'h', 'i', 'j'], 'k'], 'l'], 'm', 'n']
# Подсписок для расширения  sub_list = ['h', 'i', 'j'].

# Решение:
# list1:
# 0: 'a'
# 1: 'b'
# 2: ['c', ['d', 'e', ['f', 'g'], 'k'], 'l']
# 3: 'm'
# 4: 'n'

# list1[2]:
# 0: 'c'
# 1: ['d', 'e', ['f', 'g'], 'k']
# 2: 'l'

# list1[2][1]:
# 0: 'd'
# 1: 'e'
# 2: ['f', 'g'] - то, что нам нужно
# 3: 'k'

list1 = ['a', 'b', ['c', ['d', 'e', ['f', 'g'], 'k'], 'l'], 'm', 'n']
sub_list = ['h', 'i', 'j']
list1[2][1][2].extend(sub_list)
# print(list1)

# Задача:
# Дополните приведенный код, используя цикл for и встроенную функцию max(),
# чтобы он выводил максимальный элемент среди всех элементов вложенных списков списка list1.

# Решение:
list1 = [[1, 7, 8], [9, 7, 102], [6, 106, 105], [100, 99, 98, 103], [1, 2, 3]]
maximum = 0
for list in list1:
    maximum = max(max(list), maximum)
# print(maximum)

# Задача:
# Дополните приведенный код так, чтобы список list1 имел вид:
# list1 = [[8, 7, 1], [102, 7, 9], [105, 106, 102], [103, 98, 99, 100], [3, 2, 1]]

# Решение:
list1 = [[1, 7, 8], [9, 7, 102], [102, 106, 105], [100, 99, 98, 103], [1, 2, 3]]
for i in range(len(list1)):
    list1[i] = list1[i][::-1]
print(list1)

# Задача:
# Дополните приведенный код так, чтобы он выводил единственное число:
# сумму всех чисел списка list1, разделённую на общее количество всех чисел.

# Решение:
list1 = [[1, 7, 8], [9, 7, 102], [102, 106, 105], [100, 99, 98, 103], [1, 2, 3]]
total = 0
counter = 0
for elem in list1:
    for num in elem:
        total += num
    counter += len(elem)
print(total, counter)
print(total / counter)