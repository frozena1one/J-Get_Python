Функция INPUT()

На прошлых занятиях, мы вводили и изменяли переменные прямо в коде.
Однако это не совсем удобно.
Тем более если это будет делать человек далекий от программирования.

Также часто при программировании названия переменных вводятся так,
что не всегда можно понять, что именно имеется ввиду под конкретными переменными.

Здесь на помощь приходит INPUT( ).
Это специальная функция, которая выводит на экран окно для введения данных.

При этом введенная информация записывается в конкретную переменную.
Следовательно в коде нужно вписать имя переменной, в которую нужно вписать и функцию.

По сути input() по смыслу эквивалентно выражению “то, что напечатают на клавиатуре”.

Название переменной = то, что напечатают на клавиатуре.

То есть, если Вам как программисту необходимо получить какие-то данные от пользователя,
на помощь вам придёт функция input()

Есть одна полезная фича у этой функции:
Мы можем внутри функции прописать какой-то текст, который будет виден на том самом экране при вводе данных пользователем.
Этот текст может служить подсказкой для пользователя, чтобы было проще ориентироваться в вашей программе.

Например: мы пишем программу для регистрации пользователей в какой-то платформе.
Обычно для регистрации нужен логин и пароль, благодаря которым в дальнейшем сможем заходить в свой аккаунт.
В таком случае можем написать следующую программу:

login = input('Введите логин')
password = input('Введите пароль')

Эта программа будет работать следующим образом:
Сначала пользователь будет получать сообщение 'Введите логин'.
Далее пользователь вводит логин.
После пользователь получает сообщение 'Введите пароль'.
Пользователь вводит пароль.
Программа завершается, а в дальнейшем с этими данными в переменых login и password можно будет как-либо работать.
Обычно первым шагом эти данные заносятся в базу данных (БД).

Так же стоит отметить, что мы можем при вводе пользователем каких-то данных приводить их из одного типа данных в другой.
Это порой бывает полезно и более того необходимо.
Например, мы создаем какую-то программу с возрастным ограничением.
Например, нам нужно, чтобы пользователь был старше 18 лет, иначе он не сможет получить доступ к нашей программе.
В этом случае нам нужно приводить данные, введённые пользователем к типу данных int.
Код:
age = int(input('Введите свой возраст: '))
if age >= 18:
    {даём доступ к программе}
else:
    {запрещаем доступ к программе}

Но почему нам нужно делать приведение типов данных?
Дело в том, что дефолтное использование функции input() приводит данные к типу str, то к тексту.
А что произойдёт, когда мы будем сравнивать текст с числом в нашем условном операторе? Верно, будет ошибка.
Вот поэтому и нужно приведение типов при использовании функции input().

something = input() -> тип данных str
something = int(input()) -> тип данных int
something = float(input()) -> тип данных float