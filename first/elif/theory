МНОЖЕСТВЕННОЕ ВЕТВЛЕНИЕ: ELIF


Логика выполнения программы может быть сложнее, чем выбор одной из двух ветвей.
Возможно выбор одной из трех вариантов в зависимости от переменной.
Например, в случае со светофором, есть три разных состояния и соответственно 3 команды.
В этом случае у программы уже не 2 ветви, а 3.

Это можно реализовать с помощью нескольких конструкций if.
Сначала проверяется первое условное выражение, если оно возвращает истину, то выполняется блок команд,
затем проверяется второе условное выражение и т.д.

Однако у этого подхода есть минус, проверка всех условий будет продолжаться даже,
если первое условие было истинным и блок кода в ветке был выполнен.
И проверка последующих условий оказывается лишней.

Объясню подробнее, как должен работать правильно сформированный условный оператор с множественным ветвлением.
Давайте подумаем. У нас есть какое-то количество варинтов, число которых больше 2.
Причём варианты не пересекаются между собой, то есть не может быть такого, что нам подходит более одного варианта.

Допустим, мы поочерёдно проверяем каждый вариант. Например, нам подошёл первый вариант.
А теперь вопрос: зачем нам проверять остальные варианты, если мы нашли верный? Верно, незачем, это не имеет смысла.

Вот точно так же должен работать условный оператор в программировании.
Нам нужно составлять условия в таком порядке, чтобы если сработало какое-то условие,
то нам не нужно было проверять другие, то есть программа просто выходит из условного оператора.
Так должен работать условный оператор: нашли верное условие -> вышли из условного оператора.

А теперь вернёмся к ветвлению.
Для этих случаев нужна конструкция if-elif-else:
if условие_1:
    блок команд
elif условие_2:
    блок команд
...
else:
    блок команд

Важно замечание: эта конструкция используется, когда есть более двух исходов событий,
и среди всех событий верным может быть только один исход.
Например: времена года. По календарю в конкретный день в конкретном месте не может быть лето и зима одновременно.

Сначала идет инструкция if с условием и двоеточием, блок команд.
После этого следует несколько elif блоков: ключевое слово elif, условие, двоеточие и блок команд.
Завершается все else блоком: ключевое слово else, двоеточие и блок команд.

Выполняется это все таким образом:
Сначала проверяется условие if.
Если оно истинно, то выполняется блок команд, и на этом выполнение условного оператора завершается.

Если условие в if блоке ложно, то проверяется условие в первом elif блоке.
Если условие выполняются команды в этом блоке, и выполнение условного оператора завершается.

Если условие в первом elif блоке ложно, то проверяется условие в следующем elif блоке. И так далее.

Если условие в if блоке и во всех elif блоках ложное, то выполняется команды из блока else.
