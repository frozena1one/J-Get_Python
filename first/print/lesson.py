"""
print - ключевое слово, после которого следует пара скобок (), внутри которых прописывается то, что хотим распечатать.
print() - функция, предназначенная для вывода какой-либо информации.
"""

# Примеры:
# вывод строки:
print('Hello world')
# или
print("Hello world")
# вывод целого числа:
print(1)
# вывод десятичного числа:
print(1.11)

"""
Некоторые особенности:
После каждого вызова функции print() каретка переходит на следующую строчку, то есть следующий вызов функции print()
будет выведен на следующей строке.
"""

# Пример:
print("Hello")
print("World")

# А что если мы хотим вывести несколько строк в одной строчке? Тогда можно прописать несколько аргументов через запятую.

# Пример:
print("Hello, ", "World")

"""
А как обстоят дела с выводом чисел? Всё немного по-другому.
Есть разница между print(1) и print("1").
В первом случае выводится число, а во втором - текст.
"""


"""
Суть в том, что внутри функции print() мы можем прописать какие-то арифметические действия.
Как в этом случае важно, чтобы арифметические операции выполнялись над числами, а не текстом.
"""

# Примеры:
print('12' + 12) # -> будет ошибка, так как мы не можем складывать текст, то есть строку, с числом.
print('12' + '12') # -> '1212', то есть просто последовательно сложатся две строки.
print('12 + 12') # -> тут всё не так просто: да, визуально ответ будет 24, но оно будет являться строчкой, то есть '24'
print(12 + 12) # -> 24, всё отлично!

"""
Арифметические операции:
+ - сложение
- - вычитание
* - умножение
/ - деление с остатком
// - деление нацело
% - остаток от деления
** - возведение в степень
"""

# Немного о делении:
print(24 / 5) # -> 4.8
print(24 // 5) # -> 4

"""
Параметры функции print():
Оказывается, помимо аргумента, который отвечает за информацию, которая будет напечатана,
у этой функции есть 2 необязательных параметра:
sep(separator) - это может быть строка, которую необходимо вставлять между значениями, по умолчанию — пробел.
end - это строка, которая добавляется после последнего переданного аргумента, по умолчанию - перенос на следующую строку.
"""

# Примеры использования:
print('Иван', 'Андрей', 'Михаил', sep=',')
# Результат:
# Иван, Андрей, Михаил

print('1', '+', '2', '=', '3', sep='\n')
# Результат:
# 1
# +
# 2
# =
# 3

print('Hello', end=', ')
print('World', end='!')
# Результат:
# Hello, World!


# Напишем программу, которая имитировала бы простой калькулятор:
print('Результат: ', 12 + 34 - 56 * 78 / 90)