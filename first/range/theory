RANGE


Простыми словами, range() позволяет генерировать ряд чисел в рамках заданного диапазона.
В зависимости от того, как много аргументов вы передаете функции, вы можете решить,
где этот ряд чисел начнется и закончится, а также насколько велика разница будет между двумя числами.

В программе, внутри цикла for, обращение будет не к конкретному циклу, записанного заранее,
а к автоматически сгенерированному списку, состоящих из цифр.

Фактически, range генерирует список, состоящий из чисел. А элементы списка задаются промежутком и шагом, передаваемые как параметры в range().
Примеры:
range(5) -> [0, 1, 2, 3, 4]
range(2, 6) -> [2, 3, 4, 5]
range(1, 11, 2) -> [1, 3, 5, 7, 9]

Вызывая range() с двумя аргументами, вам нужно решить не только, где ряд чисел должен остановиться,
но и где он должен начаться, так что вам не придется начинать с нуля каждый раз.
Вы можете использовать range() для генерации ряда чисел, начиная с А до Б, используя диапазон (А, Б).
Давайте узнаем, как генерировать диапазон, начинающийся с 1: range(1, 7) -> [1, 2, 3, 4, 5, 6]

Вызывая range() с тремя аргументами, вы можете выбрать не только то, где ряд чисел начнется и остановится,
но также то, на сколько велика будет разница между одним числом и следующим.
Если вы не задаете этот «шаг», то range() автоматически будет вести себя так, как если бы шаг был бы равен 1.
Обратите внимание: шаг может быть положительным, или отрицательным числом, но он не может равняться нулю.
Если вы попробуете использовать 0 как шаг, вы получите ошибку ValueError.

range(3, 16, 3) -> [3, 6, 9, 12, 15]
